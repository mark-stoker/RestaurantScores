@using System
@model RestaurantScores.Models.Search

@{
    ViewData["Title"] = "Index";
}
<header>
    <h1>DishTheDirt</h1>
</header>

@using (Html.BeginForm("Search", "Home", FormMethod.Post, new { onsubmit = "return validateForm()" }))
{
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Index">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-group">
                    <label asp-for="SearchString" class="control-label">Enter Restaurant name and location...</label>
                    <input asp-for="SearchString" class="form-control" />
                    <div class="g-recaptcha" data-sitekey="6LfC9qIUAAAAAJlN-ZsyAzFOmI6q_Jj_fK9_6vip"></div>
                    <label asp-for="Name" id="NameLabel" class="control-label">Enter name...</label>
                    <input asp-for="Name" id="Name" class="form-control" />

                    <span asp-validation-for="SearchString" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Search"/>
                </div>
            </form>
        </div>
    </div>
    <div>
        <a asp-action="Index">Reset</a>
    </div>
}
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script src='https://www.google.com/recaptcha/api.js' type="text/javascript"></script>
<script>
    document.getElementById('NameLabel').style.display = "none";
    document.getElementById('Name').style.display = "none";

    function validateForm() {
        if (document.getElementById('Name').value !== '') {
            return false;
        }
    }

    //TODO need a method that 
    //1. Redirects to a loading page
    //2. Until the search results are found
</script>
